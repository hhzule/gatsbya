{"componentChunkName":"component---src-templates-posttemplate-js","path":"/post/JavaScript Rules","result":{"pageContext":{"data":{"node":{"title":"JavaScript Rules","timestamp":"2020-11-10T18:45-05:00","image":{"file":{"url":"//images.ctfassets.net/7vrkvphkfpmm/31fbFS0wbqPhYb8MtbPcql/2cb3f6731d462e19950a62468540890d/image.png"}},"content":{"raw":"{\"data\":{},\"content\":[{\"data\":{},\"content\":[{\"data\":{},\"marks\":[{\"type\":\"bold\"}],\"value\":\"Basic rules of JavaScript\",\"nodeType\":\"text\"}],\"nodeType\":\"heading-2\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"The following rules apply to the basic syntax of JavaScript:\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"    JavaScript is case-sensitive.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"    Statements should end in a semicolon (;).\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"    Variables:\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"        Must be defined before being used. The variable name can contain A – Z, a – z, underscore or digits and must start with a letter or an underscore (“_”).\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"        Assume the type of the data that is put into the variable. The data type does not have to be explicitly defined\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"        Are global variables when defined outside of a function, and are available anywhere in the current script context. Variables created within a function are local variables, and can be used only within that function.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"    Strings have to be enclosed in quotation marks, either a single or double. For example: print(”Hello ” + ‘world ‘+ Country.name) produces the following: Hello world US.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"    Special characters that are displayed literally must be preceded by a backslash character (\\\\). Quotes within a string can be entered preceded by a backslash as well. See the Core Language Features - Literals - \\\"String literals\\\" section for more information in http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Guide.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"    To increment a variable, such as a = a + 1, you can use a++. You can decrement a variable in the same way, as in a--.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"    To enter comments in the script, use \\\"//\\\" to start a single line comment or the combination of \\\"/*\\\" and \\\"*/\\\" to enclose a multi-line comment.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"    Values that are not defined as a data type (string, number, Boolean) may be defined as an object, such as Date, Array, Boolean, String, and Number. As an example you could define: var ArrayList=new Array(”test”, ” this”, ” list”);.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"    Dots in Service Manager field names must be replaced by an underscore (_) in JavaScript. For example contact.name becomes contact_name.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"},{\"data\":{},\"content\":[{\"data\":{},\"marks\":[],\"value\":\"    Service Manager field names that are reserved words in JavaScript have to be preceded by an underscore, such as “_class” for the “class” field.\",\"nodeType\":\"text\"}],\"nodeType\":\"paragraph\"}],\"nodeType\":\"document\"}"}}}}},"staticQueryHashes":[]}